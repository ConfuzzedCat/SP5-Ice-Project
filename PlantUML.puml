@startuml

class Main
class Account
class Checkout
enum City
class DatabaseIO
class Delivery
class Dish
class FileIO
interface IO
class MainUIMenu
class MenuCard
class Payment
class Searcher
class StartMenu
class TextUI
interface UiMenu

Main --* Account
Main --* Checkout
Main --* City
Main --* DatabaseIO
Main --* Delivery
Main --* Dish
Main --* FileIO
Main --* MainUIMenu
Main --* MenuCard
Main --* Payment
Main --* Searcher
Main --* StartMenu
Main --* TextUI

IO <|-- FileIO : is a
IO <|-- DatabaseIO : is a

UiMenu <|-- MainUIMenu
UiMenu <|-- StartMenu

IO : + void setup()
IO : + void saveAccountData()
IO : + ArrayList<Account> loadAccountData()
IO : + ArrayList<City> loadCities()
IO : + MenuCard loadMenuCard(String r)
IO : + ArrayList<String> returnRestaurantsOfCity(city c)

UiMenu : + void goBack()
UiMenu : + void showMenu()

Account : + public Account(String accountname, String password, String email, String address)
Account : + public Account(String accountname, String password, String email, String address, int id)
Account : + public static void AddAccountToList(Account a)
Account : + public static String getCSVString(Account a)

Account : + public Account register(String , String password)
Account : + public static Account register()
Account : + public static Account login()
Account : + public String getAccountname()
Account : + public void setAccountname(String accountname)
Account : + public String getPassword()
Account : + public void setPassword(String password)
Account : + public String getEmail()
Account : + public void setEmail(String email
Account : + private boolean tryLogin(String username, String password);
Account : + public static void setAccounts(ArrayList<Account>
Account : + public int getSQLID();
Account : + public void cusAddress()
Account :  Boolean isGuest
Account :  String userName
Account :  String password
Account :  String email
Account :  private int SQLID
Account :  private static ArrayList<Account> accounts = new ArrayList<>();

Checkout : + public checkoutMessage()

City : + public static City findCity(String s)

TextUI : + public static consumeLine()
TextUI : + public static void sendMessage(String text)
TextUI : + public static void sendMultipleMessages(String[] lines)
TextUI : + public static void endObjectAsMessage(Object obj)
TextUI : + public static String getUserInput(String text)

DatabaseIO : + public static Account login(String accountname, String password)
DatabaseIO : + public void setup();
DatabaseIO : + public void saveAccountData();
DatabaseIO : + public void establishConnection();
DatabaseIO : + private ArrayList<Account>();
DatabaseIO : + private ArrayList<MenuCard> loadMenuCardData();
DatabaseIO : + public ArrayList<Account> loadAccountData()
DatabaseIO : + public static ResultSet sendQuery(String query)
DatabaseIO : + public static int sendStatement(PreparedStatement statement)
DatabaseIO : + public static ResultSet sendQuery(String query, String data)
DatabaseIO : + public static PreparedStatement preparedQuery(String query, ArrayList<String> data)
DatabaseIO : + private static ArrayList<Account> getAccountsFromDB(ResultSet resultSet)
DatabaseIO : + public ArrayList<City> loadCities()
DatabaseIO : + public static ArrayList<Dish> parseDishesFromResultSet(ResultSet resultset)
DatabaseIO : private static String DBhostname;
DatabaseIO : private static String DBusername;
DatabaseIO : private static String DBpassword;
DatabaseIO : private static Connection DBconnection;

Delivery : + public static int deliveryFee(int cost)
Delivery : public static boolean delivery

Dish : + public Dish(String name, int cost)
Dish : + private String getName()
Dish : + private int getCost()
Dish : + public String toString
Dish : private String name
Dish : private int cost

FileIO : + public ArrayList<String> returnRestaurantsOfCity(City c)
FileIO : + public void saveAccountData(ArrayList<Account> accounts)
FileIO : + public ArrayList<Account> loadAccountData()
FileIO : + public ArrayList<City> loadCities()
FileIO : + public boolean accept(File current, String name)
FileIO : + public MenuCard loadMenuCardFromRestaurant(String restaurant, City c)

Main : + public static void main(String[] args)
Main : + public static void shutDown()
Main : + public static Account currentAccount;
Main : + public static void setCurrentAccount(Account currentAccount)
Main : + public static void setCurrentMenu(UIMenu currentMenu)
Main : + public static UIMenu currentMenu()
Main : + public static City getCurrentCity()
Main : + public static void setCurrentCity(City currentCity)
Main : + public static IO getIo()
Main : + public static void setIo(IO io)
Main : private static UIMenu currentMenu
Main : private static Account currentAccount
Main : private static City currentCity
Main : private static IO io

MainUIMenu : + public MainUIMenu()
MainUIMenu : + public void goBack()
MainUIMenu : + public void showMenu()

MenuCard : + public void showCatalogue(Account account);
MenuCard : + public ArrayList<Dish> getDishes()
MenuCard : + public String getRestaurantName()
MenuCard : + public MenuCard(ArrayList<Dish> dishes, String restaurantName)
MenuCard : + public Dish findDish(String dishName)
MenuCard : + public String toString()
MenuCard : private ArrayList<Dish> dishes
MenuCard : private String restaurantName

Payment : + public boolean creditCardInfo();

Searcher : + public boolean checkForDatabase();

StartMenu : + public void showMenu()
StartMenu : + public StartMenu()
StartMenu : + public void goBack()

TextUI : + public static void sendMessage(String msg)
TextUI : + public static void consumeLine()
TextUI : + public static int getUserInput(String msg, ArrayList<String> options)
TextUI : + static Scanner scan = new Scanner(System.in)




@enduml